;;
;; General definitions
;;

;; General constants

def $Ki : nat
def $Ki = 1024


;; General functions

def $min(nat, nat) : nat
def $min(0, j) = 0
def $min(i, 0) = 0
def $min($(i+1), $(j+1)) = $min(i, j)

def $sum(nat*) : nat  ;; TODO: hint
def $sum(epsilon) = 0
def $sum(n n'*) = $(n + $sum(n'*))


;;
;; Auxiliary Definitions on Types
;;

;; Size

;; def |I n| = |F n| = |V n| = n        ;; ????

def $size(valtype) : nat  hint(partial) hint(show |%|)
def $size(I32) = 32
def $size(I64) = 64
def $size(F32) = 32
def $size(F64) = 64
def $size(V128) = 128


;;
;; Numeric functions
;;

def $signed(N, nat) : int       hint(show $signed_(%,%))
def $signed(N, i) = i           -- if $(0 <= 2^(N-1))
def $signed(N, i) = $(i - 2^N)  -- if $(2^(N-1) <= i < 2^N)

def $invsigned(N, int) : nat    hint(show $signed^(-1)#_%#(%))
def $invsigned(N, i) = j        -- if $signed(N, j) = i


;;
;; Shorthands for instructions
;;

def $memop0 : memop  hint(show )
def $memop0 = {ALIGN 0, OFFSET 0}


;; Free indices

def $free_dataidx_instr(instr) : dataidx*  hint(show $free_dataidx)
def $free_dataidx_instr(MEMORY.INIT x) = x
def $free_dataidx_instr(DATA.DROP x) = x
def $free_dataidx_instr(in) = epsilon

def $free_dataidx_instrs(instr*) : dataidx*  hint(show $free_dataidx)
def $free_dataidx_instrs(epsilon) = epsilon
def $free_dataidx_instrs(instr instr'*) = $free_dataidx_instr(instr) $free_dataidx_instrs(instr'*)

def $free_dataidx_expr(expr) : dataidx*  hint(show $free_dataidx)
def $free_dataidx_expr(in*) = $free_dataidx_instrs(in*)

def $free_dataidx_func(func) : dataidx*  hint(show $free_dataidx)
def $free_dataidx_func(FUNC x loc* e) = $free_dataidx_expr(e)

def $free_dataidx_funcs(func*) : dataidx*  hint(show $free_dataidx)
def $free_dataidx_funcs(epsilon) = epsilon
def $free_dataidx_funcs(func func'*) = $free_dataidx_func(func) $free_dataidx_funcs(func'*)


;;
;; Some notation tests
;; TODO: remove
;;

def $test_sub_ATOM_22(n_3_ATOM_y) : nat
def $test_sub_ATOM_22(n_3_ATOM_y) = 0

def $curried_(n, n) : nat
def $curried_(n_1, n_2) = $(n_1 + n_2)

syntax testfuse =
  | AB_ nat nat nat
  | CD nat nat nat  hint(show CD_% % %)
  | EF nat nat nat  hint(show EF_#% % %)
  | GH nat nat nat  hint(show GH_%#% %)
  | IJ nat nat nat  hint(show IJ_%#% %)
  | KL nat nat nat  hint(show KL_AB#% % %)
  | MN nat nat nat  hint(show MN_#AB % % %)
  | OP nat nat nat  hint(show OP_#AB#% % %)
  | QR nat nat nat  hint(show QR_%#AB % %)
