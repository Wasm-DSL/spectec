grammar Teps : nat = eps => 42

grammar Tbyte : nat = i:0x3A => i

grammar Ttext : () = "AÄÜ" => ()

grammar Bseq : nat = i:0x03 j:0x04 eps k:0x02 => $(i + j * k)

grammar Tseq : () = eps "A" eps "BC" "D" => ()

grammar Talt : () = "A" | "BC" | "D" => ()
grammar Talt2 : () = "A" | "B" | "BC" | "A" | "DE" | "" => ()

grammar Tprod : nat = "A" => 1 | "BC" => 2 | "D" => 3 | "" => 0

grammar Brng : nat = i:0x10 | ... | i:0x20 => i

var ns : nat*
var no : nat?

grammar Bstar : nat* = ns:0x01* => ns
grammar Bstar2 : nat* = is*:0x01* => is*
grammar Bstar3 : nat* = (is:0x01)* => is*

grammar Tstar : () = "AB"* => ()

grammar Bplus : nat* = ns:0x01+ => ns
grammar Bplus2 : nat* = i*:0x01+ => i*
grammar Bplus3 : nat* = (i:0x01)+ => i+

grammar Tplus : () = "ABC"+ => ()

grammar Bquest : nat? = no:0x01? => no
grammar Bquest2 : nat? = i?:0x01? => i?
grammar Bquest3 : nat? = (i:0x01)? => i?

grammar Tquest : () = "ABCD"? => ()

grammar Bnth : nat* = ns:0x01^(2*2) => ns
grammar Bnth2 : nat* = i*:0x01^(2*2) => i*
grammar Bnth3 : nat* = (i:0x01)^(2*2) => i^(2*2)

grammar Tnth : () = "ABC"^(7-4) => ()

grammar Bdef : nat = i:0x03 j:0x04 => $(i + j)
grammar Bvar : nat = i:0x01 k:Bdef j:0x10 => $(i*j + k)

grammar Brec : nat* = eps => eps | 0x01 ns:Brec => 1 ns
grammar Brec2 : nat* = eps => eps | 0x01 i*:Brec2 => 1 i*

grammar Btest1 : nat* = 0x01 i*:Brng* 0x02 => i*

grammar Btest2 : nat* = 0x00 => eps | i:Brng j*:Btest2 => i j*
